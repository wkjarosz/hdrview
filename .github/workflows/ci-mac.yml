name: macOS build

on:
  push:
    branches:
      - "*"
    pull_request:
      - "*"
    paths:
      # This action only runs on push when C++ files are changed
      - "**.cpp"
      - "**.h"
      - "**.cmake"
      - "**Lists.txt"
      - "**-mac.yml"
  workflow_dispatch:

env:
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules

jobs:
  build:
    name: ${{ matrix.config.name }} (${{ matrix.buildtype }})
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: "macOS - Metal",
              os: macos-latest,
              suffix: "-metal",
              cmake_options: '-DCMAKE_OSX_DEPLOYMENT_TARGET=10.15 -DNANOGUI_BACKEND=Metal -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64"',
              exe: "",
            }
          - {
              name: "macOS - OpenGL",
              os: macos-latest,
              suffix: "-opengl",
              cmake_options: '-DCMAKE_OSX_DEPLOYMENT_TARGET=10.15 -DNANOGUI_BACKEND=OpenGL -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64"',
              exe: "",
            }
          - {
              name: "Ubuntu",
              os: ubuntu-latest,
              suffix: "",
              cmake_options: "",
              exe: "",
            }
          - {
              name: "Windows",
              os: windows-latest,
              suffix: "",
              cmake_options: "",
              exe: ".exe",
            }
        buildtype: [Release, Debug]

    steps:
      - name: Install dependencies
        run: ${{ runner.os == 'macOS' && 'brew install ninja create-dmg' || runner.os == 'Windows' && 'choco install ninja' || 'sudo apt-get update && sudo apt-get install cmake xorg-dev libglu1-mesa-dev zlib1g-dev libxrandr-dev ninja-build' }}

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/cache@v3
        with:
          path: "**/cpm_modules"
          key: ${{ github.workflow }}-cpm-modules-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}

      # Setup caching of build artifacts to reduce total build time (only Linux and MacOS)
      - name: ccache
        # if: runner.os != 'Windows'
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.config.os }}-${{ matrix.buildtype }}

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build${{ matrix.config.suffix }}

      - name: Configure CMake
        run: |
          cmake -B ${{github.workspace}}/build${{ matrix.config.suffix }} -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.buildtype }} -DCMAKE_POLICY_DEFAULT_CMP0135=NEW -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ${{ matrix.config.cmake_options }}

      - name: Build
        run: cmake --build ${{github.workspace}}/build${{ matrix.config.suffix }} --parallel 4 --config ${{ matrix.buildtype }}

      - name: Checking that HDRView and hdrbatch run (macOS)
        run: |
          ${{github.workspace}}/build${{ matrix.config.suffix }}${{ runner.os == 'macOS' && '/HDRView.app/Contents/MacOS/HDRView' || '/HDRView' }}${{ matrix.config.exe }} --help
          ${{github.workspace}}/build${{ matrix.config.suffix }}/hdrbatch${{ matrix.config.exe }} --help

      - name: Creating dmg (macOS)
        if: runner.os == 'macOS'
        run: |
          RESULT="${{github.workspace}}/build${{ matrix.config.suffix }}/HDRView${{ matrix.config.suffix }}.dmg"
          test -f $RESULT && rm $RESULT
          create-dmg --window-size 500 300 --icon-size 96 --volname "HDRView Installer" --app-drop-link 360 105 --icon HDRView.app 130 105 $RESULT ${{github.workspace}}/build${{ matrix.config.suffix }}/HDRView.app

      - name: Archive dmg (macOS)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v3
        with:
          name: HDRView${{ matrix.config.suffix }}.dmg
          path: |
            ${{github.workspace}}/build${{ matrix.config.suffix }}/HDRView${{ matrix.config.suffix }}.dmg

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts${{ matrix.config.suffix }}-${{ matrix.buildtype }}
          path: |
            ${{github.workspace}}/build${{ matrix.config.suffix }}
